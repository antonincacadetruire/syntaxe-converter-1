language: "Java8Parser"
version: "1.0"
rules:
  - name: "ABSTRACT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "abstract"
  - name: "ASSERT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "assert"
  - name: "BOOLEAN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "boolean"
  - name: "BREAK"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "break"
  - name: "BYTE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "byte"
  - name: "CASE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "case"
  - name: "CATCH"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "catch"
  - name: "CHAR"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "char"
  - name: "CLASS"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "class"
  - name: "CONST"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "const"
  - name: "CONTINUE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "continue"
  - name: "DEFAULT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "default"
  - name: "DO"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "do"
  - name: "DOUBLE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "double"
  - name: "ELSE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "else"
  - name: "ENUM"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "enum"
  - name: "EXTENDS"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "extends"
  - name: "FINAL"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "final"
  - name: "FINALLY"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "finally"
  - name: "FLOAT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "float"
  - name: "FOR"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "for"
  - name: "IF"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "if"
  - name: "GOTO"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "goto"
  - name: "IMPLEMENTS"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "implements"
  - name: "IMPORT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "import"
  - name: "INSTANCEOF"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "instanceof"
  - name: "INT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "int"
  - name: "INTERFACE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "interface"
  - name: "LONG"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "long"
  - name: "NATIVE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "native"
  - name: "NEW"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "new"
  - name: "PACKAGE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "package"
  - name: "PRIVATE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "private"
  - name: "PROTECTED"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "protected"
  - name: "PUBLIC"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "public"
  - name: "RETURN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "return"
  - name: "SHORT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "short"
  - name: "STATIC"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "static"
  - name: "STRICTFP"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "strictfp"
  - name: "SUPER"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "super"
  - name: "SWITCH"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "switch"
  - name: "SYNCHRONIZED"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "synchronized"
  - name: "THIS"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "this"
  - name: "THROW"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "throw"
  - name: "THROWS"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "throws"
  - name: "TRANSIENT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "transient"
  - name: "TRY"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "try"
  - name: "VOID"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "void"
  - name: "VOLATILE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "volatile"
  - name: "WHILE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "while"
  - name: "IntegerLiteral"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "DecimalIntegerLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "HexIntegerLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "OctalIntegerLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "BinaryIntegerLiteral"
  - name: "DecimalIntegerLiteral"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "DecimalNumeral"
  - name: "HexIntegerLiteral"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "HexNumeral"
  - name: "OctalIntegerLiteral"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "OctalNumeral"
  - name: "BinaryIntegerLiteral"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "BinaryNumeral"
  - name: "IntegerTypeSuffix"
    type: ["sequence"]
    elements:
  - name: "DecimalNumeral"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "0"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "NonZeroDigit"
  - name: "Digits"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Digit"
  - name: "Digit"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "0"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "NonZeroDigit"
  - name: "NonZeroDigit"
    type: ["sequence"]
    elements:
  - name: "DigitsAndUnderscores"
    type: ["sequence"]
    elements:
  - name: "DigitOrUnderscore"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Digit"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "_"
  - name: "Underscores"
    type: ["sequence"]
    elements:
  - name: "HexNumeral"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "0"
      - type: ["reference"]
        value: "HexDigits"
  - name: "HexDigits"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "HexDigit"
  - name: "HexDigit"
    type: ["sequence"]
    elements:
  - name: "HexDigitsAndUnderscores"
    type: ["sequence"]
    elements:
  - name: "HexDigitOrUnderscore"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "HexDigit"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "_"
  - name: "OctalNumeral"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "0"
      - type: ["reference"]
        value: "OctalDigits"
  - name: "OctalDigits"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "OctalDigit"
  - name: "OctalDigit"
    type: ["sequence"]
    elements:
  - name: "OctalDigitsAndUnderscores"
    type: ["sequence"]
    elements:
  - name: "OctalDigitOrUnderscore"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "OctalDigit"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "_"
  - name: "BinaryNumeral"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "0"
      - type: ["reference"]
        value: "BinaryDigits"
  - name: "BinaryDigits"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "BinaryDigit"
  - name: "BinaryDigit"
    type: ["sequence"]
    elements:
  - name: "BinaryDigitsAndUnderscores"
    type: ["sequence"]
    elements:
  - name: "BinaryDigitOrUnderscore"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "BinaryDigit"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "_"
  - name: "FloatingPointLiteral"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "DecimalFloatingPointLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "HexadecimalFloatingPointLiteral"
  - name: "DecimalFloatingPointLiteral"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Digits"
          - type: ["keyword"]
            value: "."
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Digits"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Digits"
          - type: ["reference"]
            value: "ExponentPart"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Digits"
          - type: ["reference"]
            value: "FloatTypeSuffix"
  - name: "ExponentPart"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "ExponentIndicator"
      - type: ["reference"]
        value: "SignedInteger"
  - name: "ExponentIndicator"
    type: ["sequence"]
    elements:
  - name: "SignedInteger"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Digits"
  - name: "Sign"
    type: ["sequence"]
    elements:
  - name: "FloatTypeSuffix"
    type: ["sequence"]
    elements:
  - name: "HexadecimalFloatingPointLiteral"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "HexSignificand"
      - type: ["reference"]
        value: "BinaryExponent"
  - name: "HexSignificand"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "HexNumeral"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "0"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "HexDigits"
  - name: "BinaryExponent"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "BinaryExponentIndicator"
      - type: ["reference"]
        value: "SignedInteger"
  - name: "BinaryExponentIndicator"
    type: ["sequence"]
    elements:
  - name: "BooleanLiteral"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "true"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "false"
  - name: "CharacterLiteral"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "'"
          - type: ["reference"]
            value: "SingleCharacter"
          - type: ["keyword"]
            value: "'"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "'"
          - type: ["reference"]
            value: "EscapeSequence"
          - type: ["keyword"]
            value: "'"
  - name: "SingleCharacter"
    type: ["sequence"]
    elements:
  - name: "StringLiteral"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "\""
      - type: ["keyword"]
        value: "\""
  - name: "StringCharacters"
    type: ["sequence"]
    elements:
  - name: "StringCharacter"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "EscapeSequence"
  - name: "EscapeSequence"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "\\"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "OctalEscape"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "UnicodeEscape"
  - name: "OctalEscape"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "\\"
          - type: ["reference"]
            value: "OctalDigit"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "\\"
          - type: ["reference"]
            value: "OctalDigit"
          - type: ["reference"]
            value: "OctalDigit"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "\\"
          - type: ["reference"]
            value: "ZeroToThree"
          - type: ["reference"]
            value: "OctalDigit"
          - type: ["reference"]
            value: "OctalDigit"
  - name: "ZeroToThree"
    type: ["sequence"]
    elements:
  - name: "UnicodeEscape"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "\\"
      - type: ["reference"]
        value: "HexDigit"
      - type: ["reference"]
        value: "HexDigit"
      - type: ["reference"]
        value: "HexDigit"
      - type: ["reference"]
        value: "HexDigit"
  - name: "NullLiteral"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "null"
  - name: "LPAREN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "("
  - name: "RPAREN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ")"
  - name: "LBRACE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
  - name: "RBRACE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "}"
  - name: "LBRACK"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "["
  - name: "RBRACK"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "]"
  - name: "SEMI"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ";"
  - name: "COMMA"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ","
  - name: "DOT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "."
  - name: "ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "="
  - name: "GT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ">"
  - name: "LT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "<"
  - name: "BANG"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "!"
  - name: "TILDE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "~"
  - name: "QUESTION"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "?"
  - name: "COLON"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ":"
  - name: "EQUAL"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "=="
  - name: "LE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "<="
  - name: "GE"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ">="
  - name: "NOTEQUAL"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "!="
  - name: "AND"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "&&"
  - name: "OR"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "||"
  - name: "INC"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "++"
  - name: "DEC"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "--"
  - name: "ADD"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "+"
  - name: "SUB"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "-"
  - name: "MUL"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "*"
  - name: "DIV"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "/"
  - name: "BITAND"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "&"
  - name: "BITOR"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "|"
  - name: "CARET"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "^"
  - name: "MOD"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "%"
  - name: "ARROW"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "->"
  - name: "COLONCOLON"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "::"
  - name: "ADD_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "+="
  - name: "SUB_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "-="
  - name: "MUL_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "*="
  - name: "DIV_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "/="
  - name: "AND_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "&="
  - name: "OR_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "|="
  - name: "XOR_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "^="
  - name: "MOD_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "%="
  - name: "LSHIFT_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "<<="
  - name: "RSHIFT_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ">>="
  - name: "URSHIFT_ASSIGN"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ">>>="
  - name: "Identifier"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "IdentifierStart"
  - name: "IdentifierStart"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
  - name: "IdentifierPart"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "IdentifierStart"
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
      - type: ["sequence"]
        elements:
  - name: "AT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "@"
  - name: "ELLIPSIS"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "..."
  - name: "WS"
    type: ["sequence"]
    elements:
  - name: "COMMENT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "/*"
      - type: ["keyword"]
        value: "*/"
  - name: "LINE_COMMENT"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "//"
  - name: "literal"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "IntegerLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "FloatingPointLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "BooleanLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "CharacterLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "StringLiteral"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "NullLiteral"
  - name: "primitiveType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "numericType"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "boolean"
  - name: "numericType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "integralType"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "floatingPointType"
  - name: "integralType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "byte"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "short"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "int"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "long"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "char"
  - name: "floatingPointType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "float"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "double"
  - name: "referenceType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classOrInterfaceType"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeVariable"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayType"
  - name: "classOrInterfaceType"
    type: ["sequence"]
    elements:
  - name: "classType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classOrInterfaceType"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "classType_lf_classOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "."
      - type: ["reference"]
        value: "Identifier"
  - name: "classType_lfno_classOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "interfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "classType"
  - name: "interfaceType_lf_classOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "classType_lf_classOrInterfaceType"
  - name: "interfaceType_lfno_classOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "classType_lfno_classOrInterfaceType"
  - name: "typeVariable"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "arrayType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "primitiveType"
          - type: ["reference"]
            value: "dims"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classOrInterfaceType"
          - type: ["reference"]
            value: "dims"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeVariable"
          - type: ["reference"]
            value: "dims"
  - name: "dims"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "["
      - type: ["keyword"]
        value: "]"
  - name: "typeParameter"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "typeParameterModifier"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "annotation"
  - name: "typeBound"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "extends"
          - type: ["reference"]
            value: "typeVariable"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "extends"
          - type: ["reference"]
            value: "classOrInterfaceType"
  - name: "additionalBound"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "&"
      - type: ["reference"]
        value: "interfaceType"
  - name: "typeArguments"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "<"
      - type: ["reference"]
        value: "typeArgumentList"
      - type: ["keyword"]
        value: ">"
  - name: "typeArgumentList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "typeArgument"
  - name: "typeArgument"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "referenceType"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "wildcard"
  - name: "wildcard"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "?"
  - name: "wildcardBounds"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "extends"
          - type: ["reference"]
            value: "referenceType"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["reference"]
            value: "referenceType"
  - name: "packageName"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "packageName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "typeName"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "packageOrTypeName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "packageOrTypeName"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "packageOrTypeName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "expressionName"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "ambiguousName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "methodName"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "ambiguousName"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "ambiguousName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "compilationUnit"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "EOF"
  - name: "packageDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "package"
      - type: ["reference"]
        value: "packageName"
      - type: ["keyword"]
        value: ";"
  - name: "packageModifier"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "annotation"
  - name: "importDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "singleTypeImportDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeImportOnDemandDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "singleStaticImportDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "staticImportOnDemandDeclaration"
  - name: "singleTypeImportDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "import"
      - type: ["reference"]
        value: "typeName"
      - type: ["keyword"]
        value: ";"
  - name: "typeImportOnDemandDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "import"
      - type: ["reference"]
        value: "packageOrTypeName"
      - type: ["keyword"]
        value: "."
      - type: ["keyword"]
        value: "*"
      - type: ["keyword"]
        value: ";"
  - name: "singleStaticImportDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "import"
      - type: ["keyword"]
        value: "static"
      - type: ["reference"]
        value: "typeName"
      - type: ["keyword"]
        value: "."
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: ";"
  - name: "staticImportOnDemandDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "import"
      - type: ["keyword"]
        value: "static"
      - type: ["reference"]
        value: "typeName"
      - type: ["keyword"]
        value: "."
      - type: ["keyword"]
        value: "*"
      - type: ["keyword"]
        value: ";"
  - name: "typeDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "interfaceDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ";"
  - name: "classDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "normalClassDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "enumDeclaration"
  - name: "normalClassDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "class"
      - type: ["reference"]
        value: "Identifier"
      - type: ["reference"]
        value: "classBody"
  - name: "classModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "protected"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "private"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "abstract"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "static"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "final"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "strictfp"
  - name: "typeParameters"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "<"
      - type: ["reference"]
        value: "typeParameterList"
      - type: ["keyword"]
        value: ">"
  - name: "typeParameterList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "typeParameter"
  - name: "superclass"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "extends"
      - type: ["reference"]
        value: "classType"
  - name: "superinterfaces"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "implements"
      - type: ["reference"]
        value: "interfaceTypeList"
  - name: "interfaceTypeList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "interfaceType"
  - name: "classBody"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "classBodyDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classMemberDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "instanceInitializer"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "staticInitializer"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "constructorDeclaration"
  - name: "classMemberDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "interfaceDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ";"
  - name: "fieldDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorList"
      - type: ["keyword"]
        value: ";"
  - name: "fieldModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "protected"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "private"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "static"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "final"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "transient"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "volatile"
  - name: "variableDeclaratorList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "variableDeclarator"
  - name: "variableDeclarator"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "variableDeclaratorId"
  - name: "variableDeclaratorId"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "variableInitializer"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayInitializer"
  - name: "unannType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannPrimitiveType"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannReferenceType"
  - name: "unannPrimitiveType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "numericType"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "boolean"
  - name: "unannReferenceType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannClassOrInterfaceType"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannTypeVariable"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannArrayType"
  - name: "unannClassOrInterfaceType"
    type: ["sequence"]
    elements:
  - name: "unannClassType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannClassOrInterfaceType"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "unannClassType_lf_unannClassOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "."
      - type: ["reference"]
        value: "Identifier"
  - name: "unannClassType_lfno_unannClassOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "unannInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannClassType"
  - name: "unannInterfaceType_lf_unannClassOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannClassType_lf_unannClassOrInterfaceType"
  - name: "unannInterfaceType_lfno_unannClassOrInterfaceType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannClassType_lfno_unannClassOrInterfaceType"
  - name: "unannTypeVariable"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "unannArrayType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannPrimitiveType"
          - type: ["reference"]
            value: "dims"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannClassOrInterfaceType"
          - type: ["reference"]
            value: "dims"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannTypeVariable"
          - type: ["reference"]
            value: "dims"
  - name: "methodDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "methodHeader"
      - type: ["reference"]
        value: "methodBody"
  - name: "methodModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "protected"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "private"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "abstract"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "static"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "final"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "synchronized"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "native"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "strictfp"
  - name: "methodHeader"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "result"
          - type: ["reference"]
            value: "methodDeclarator"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeParameters"
          - type: ["reference"]
            value: "result"
          - type: ["reference"]
            value: "methodDeclarator"
  - name: "result"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannType"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "void"
  - name: "methodDeclarator"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ")"
  - name: "formalParameterList"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "receiverParameter"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "formalParameters"
          - type: ["keyword"]
            value: ","
          - type: ["reference"]
            value: "lastFormalParameter"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "lastFormalParameter"
  - name: "formalParameters"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "formalParameter"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "receiverParameter"
  - name: "formalParameter"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorId"
  - name: "variableModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "final"
  - name: "lastFormalParameter"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannType"
          - type: ["keyword"]
            value: "..."
          - type: ["reference"]
            value: "variableDeclaratorId"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "formalParameter"
  - name: "receiverParameter"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["keyword"]
        value: "this"
  - name: "throws_"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "throws"
      - type: ["reference"]
        value: "exceptionTypeList"
  - name: "exceptionTypeList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "exceptionType"
  - name: "exceptionType"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classType"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeVariable"
  - name: "methodBody"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "block"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ";"
  - name: "instanceInitializer"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "block"
  - name: "staticInitializer"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "static"
      - type: ["reference"]
        value: "block"
  - name: "constructorDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "constructorDeclarator"
      - type: ["reference"]
        value: "constructorBody"
  - name: "constructorModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "protected"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "private"
  - name: "constructorDeclarator"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "simpleTypeName"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ")"
  - name: "simpleTypeName"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "constructorBody"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "explicitConstructorInvocation"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "this"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
          - type: ["keyword"]
            value: ";"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
          - type: ["keyword"]
            value: ";"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
          - type: ["keyword"]
            value: ";"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "primary"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
          - type: ["keyword"]
            value: ";"
  - name: "enumDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "enum"
      - type: ["reference"]
        value: "Identifier"
      - type: ["reference"]
        value: "enumBody"
  - name: "enumBody"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "enumConstantList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "enumConstant"
  - name: "enumConstant"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "enumConstantModifier"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "annotation"
  - name: "enumBodyDeclarations"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ";"
  - name: "interfaceDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "normalInterfaceDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotationTypeDeclaration"
  - name: "normalInterfaceDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "interface"
      - type: ["reference"]
        value: "Identifier"
      - type: ["reference"]
        value: "interfaceBody"
  - name: "interfaceModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "protected"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "private"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "abstract"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "static"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "strictfp"
  - name: "extendsInterfaces"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "extends"
      - type: ["reference"]
        value: "interfaceTypeList"
  - name: "interfaceBody"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "interfaceMemberDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "constantDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "interfaceMethodDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "interfaceDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ";"
  - name: "constantDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorList"
      - type: ["keyword"]
        value: ";"
  - name: "constantModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "static"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "final"
  - name: "interfaceMethodDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "methodHeader"
      - type: ["reference"]
        value: "methodBody"
  - name: "interfaceMethodModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "abstract"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "default"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "static"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "strictfp"
  - name: "annotationTypeDeclaration"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "@"
      - type: ["keyword"]
        value: "interface"
      - type: ["reference"]
        value: "Identifier"
      - type: ["reference"]
        value: "annotationTypeBody"
  - name: "annotationTypeBody"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "annotationTypeMemberDeclaration"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotationTypeElementDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "constantDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "interfaceDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ";"
  - name: "annotationTypeElementDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ")"
      - type: ["keyword"]
        value: ";"
  - name: "annotationTypeElementModifier"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "public"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "abstract"
  - name: "defaultValue"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "default"
      - type: ["reference"]
        value: "elementValue"
  - name: "annotation"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "normalAnnotation"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "markerAnnotation"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "singleElementAnnotation"
  - name: "normalAnnotation"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "@"
      - type: ["reference"]
        value: "typeName"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ")"
  - name: "elementValuePairList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "elementValuePair"
  - name: "elementValuePair"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: "="
      - type: ["reference"]
        value: "elementValue"
  - name: "elementValue"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "elementValueArrayInitializer"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "annotation"
  - name: "elementValueArrayInitializer"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "elementValueList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "elementValue"
  - name: "markerAnnotation"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "@"
      - type: ["reference"]
        value: "typeName"
  - name: "singleElementAnnotation"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "@"
      - type: ["reference"]
        value: "typeName"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "elementValue"
      - type: ["keyword"]
        value: ")"
  - name: "arrayInitializer"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "variableInitializerList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "variableInitializer"
  - name: "block"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "blockStatements"
    type: ["sequence"]
    elements:
  - name: "blockStatement"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "localVariableDeclarationStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classDeclaration"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "statement"
  - name: "localVariableDeclarationStatement"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "localVariableDeclaration"
      - type: ["keyword"]
        value: ";"
  - name: "localVariableDeclaration"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorList"
  - name: "statement"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "statementWithoutTrailingSubstatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "labeledStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "ifThenStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "ifThenElseStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "whileStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "forStatement"
  - name: "statementNoShortIf"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "statementWithoutTrailingSubstatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "labeledStatementNoShortIf"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "ifThenElseStatementNoShortIf"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "whileStatementNoShortIf"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "forStatementNoShortIf"
  - name: "statementWithoutTrailingSubstatement"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "block"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "emptyStatement_"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "assertStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "switchStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "doStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "breakStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "continueStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "returnStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "synchronizedStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "throwStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "tryStatement"
  - name: "emptyStatement_"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: ";"
  - name: "labeledStatement"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: ":"
      - type: ["reference"]
        value: "statement"
  - name: "labeledStatementNoShortIf"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: ":"
      - type: ["reference"]
        value: "statementNoShortIf"
  - name: "expressionStatement"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "statementExpression"
      - type: ["keyword"]
        value: ";"
  - name: "statementExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "assignment"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "preIncrementExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "preDecrementExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "postIncrementExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "postDecrementExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression"
  - name: "ifThenStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "if"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statement"
  - name: "ifThenElseStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "if"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statementNoShortIf"
      - type: ["keyword"]
        value: "else"
      - type: ["reference"]
        value: "statement"
  - name: "ifThenElseStatementNoShortIf"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "if"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statementNoShortIf"
      - type: ["keyword"]
        value: "else"
      - type: ["reference"]
        value: "statementNoShortIf"
  - name: "assertStatement"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "assert"
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ";"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "assert"
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ":"
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ";"
  - name: "switchStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "switch"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "switchBlock"
  - name: "switchBlock"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "{"
      - type: ["keyword"]
        value: "}"
  - name: "switchBlockStatementGroup"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "switchLabels"
      - type: ["reference"]
        value: "blockStatements"
  - name: "switchLabels"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "switchLabel"
  - name: "switchLabel"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "case"
          - type: ["reference"]
            value: "constantExpression"
          - type: ["keyword"]
            value: ":"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "case"
          - type: ["reference"]
            value: "enumConstantName"
          - type: ["keyword"]
            value: ":"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "default"
          - type: ["keyword"]
            value: ":"
  - name: "enumConstantName"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "whileStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "while"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statement"
  - name: "whileStatementNoShortIf"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "while"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statementNoShortIf"
  - name: "doStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "do"
      - type: ["reference"]
        value: "statement"
      - type: ["keyword"]
        value: "while"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["keyword"]
        value: ";"
  - name: "forStatement"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "basicForStatement"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "enhancedForStatement"
  - name: "forStatementNoShortIf"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "basicForStatementNoShortIf"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "enhancedForStatementNoShortIf"
  - name: "basicForStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "for"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ";"
      - type: ["keyword"]
        value: ";"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statement"
  - name: "basicForStatementNoShortIf"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "for"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ";"
      - type: ["keyword"]
        value: ";"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statementNoShortIf"
  - name: "forInit"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "statementExpressionList"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "localVariableDeclaration"
  - name: "forUpdate"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "statementExpressionList"
  - name: "statementExpressionList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "statementExpression"
  - name: "enhancedForStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "for"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorId"
      - type: ["keyword"]
        value: ":"
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statement"
  - name: "enhancedForStatementNoShortIf"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "for"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorId"
      - type: ["keyword"]
        value: ":"
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "statementNoShortIf"
  - name: "breakStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "break"
      - type: ["keyword"]
        value: ";"
  - name: "continueStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "continue"
      - type: ["keyword"]
        value: ";"
  - name: "returnStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "return"
      - type: ["keyword"]
        value: ";"
  - name: "throwStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "throw"
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ";"
  - name: "synchronizedStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "synchronized"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "block"
  - name: "tryStatement"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "try"
          - type: ["reference"]
            value: "block"
          - type: ["reference"]
            value: "catches"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "try"
          - type: ["reference"]
            value: "block"
          - type: ["reference"]
            value: "finally_"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "tryWithResourcesStatement"
  - name: "catches"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "catchClause"
  - name: "catchClause"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "catch"
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "catchFormalParameter"
      - type: ["keyword"]
        value: ")"
      - type: ["reference"]
        value: "block"
  - name: "catchFormalParameter"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "catchType"
      - type: ["reference"]
        value: "variableDeclaratorId"
  - name: "catchType"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannClassType"
  - name: "finally_"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "finally"
      - type: ["reference"]
        value: "block"
  - name: "tryWithResourcesStatement"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "try"
      - type: ["reference"]
        value: "resourceSpecification"
      - type: ["reference"]
        value: "block"
  - name: "resourceSpecification"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "("
      - type: ["reference"]
        value: "resourceList"
      - type: ["keyword"]
        value: ")"
  - name: "resourceList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "resource"
  - name: "resource"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "unannType"
      - type: ["reference"]
        value: "variableDeclaratorId"
      - type: ["keyword"]
        value: "="
      - type: ["reference"]
        value: "expression"
  - name: "primary"
    type: ["sequence"]
    elements:
  - name: "primaryNoNewArray"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "literal"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "void"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayAccess"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodReference"
  - name: "primaryNoNewArray_lf_arrayAccess"
    type: ["sequence"]
    elements:
  - name: "primaryNoNewArray_lfno_arrayAccess"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "literal"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "void"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodReference"
  - name: "primaryNoNewArray_lf_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayAccess_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodReference_lf_primary"
  - name: "primaryNoNewArray_lf_primary_lf_arrayAccess_lf_primary"
    type: ["sequence"]
    elements:
  - name: "primaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation_lf_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodReference_lf_primary"
  - name: "primaryNoNewArray_lfno_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "literal"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannPrimitiveType"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "void"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayAccess_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodReference_lfno_primary"
  - name: "primaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primary"
    type: ["sequence"]
    elements:
  - name: "primaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "literal"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unannPrimitiveType"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "void"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "class"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "this"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classInstanceCreationExpression_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodInvocation_lfno_primary"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodReference_lfno_primary"
  - name: "classInstanceCreationExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "primary"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
  - name: "classInstanceCreationExpression_lf_primary"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "."
      - type: ["keyword"]
        value: "new"
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ")"
  - name: "classInstanceCreationExpression_lfno_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
  - name: "typeArgumentsOrDiamond"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeArguments"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "<"
          - type: ["keyword"]
            value: ">"
  - name: "fieldAccess"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "primary"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "fieldAccess_lf_primary"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "."
      - type: ["reference"]
        value: "Identifier"
  - name: "fieldAccess_lfno_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
  - name: "arrayAccess"
    type: ["sequence"]
    elements:
  - name: "arrayAccess_lf_primary"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "primaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary"
      - type: ["keyword"]
        value: "["
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: "]"
  - name: "arrayAccess_lfno_primary"
    type: ["sequence"]
    elements:
  - name: "methodInvocation"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodName"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "primary"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
  - name: "methodInvocation_lf_primary"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "."
      - type: ["reference"]
        value: "Identifier"
      - type: ["keyword"]
        value: "("
      - type: ["keyword"]
        value: ")"
  - name: "methodInvocation_lfno_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "methodName"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "."
          - type: ["reference"]
            value: "Identifier"
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
  - name: "argumentList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "expression"
  - name: "methodReference"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "referenceType"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "primary"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classType"
          - type: ["keyword"]
            value: "::"
          - type: ["keyword"]
            value: "new"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayType"
          - type: ["keyword"]
            value: "::"
          - type: ["keyword"]
            value: "new"
  - name: "methodReference_lf_primary"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "::"
      - type: ["reference"]
        value: "Identifier"
  - name: "methodReference_lfno_primary"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "referenceType"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "typeName"
          - type: ["keyword"]
            value: "."
          - type: ["keyword"]
            value: "super"
          - type: ["keyword"]
            value: "::"
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "classType"
          - type: ["keyword"]
            value: "::"
          - type: ["keyword"]
            value: "new"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayType"
          - type: ["keyword"]
            value: "::"
          - type: ["keyword"]
            value: "new"
  - name: "arrayCreationExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "primitiveType"
          - type: ["reference"]
            value: "dimExprs"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "classOrInterfaceType"
          - type: ["reference"]
            value: "dimExprs"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "primitiveType"
          - type: ["reference"]
            value: "dims"
          - type: ["reference"]
            value: "arrayInitializer"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "new"
          - type: ["reference"]
            value: "classOrInterfaceType"
          - type: ["reference"]
            value: "dims"
          - type: ["reference"]
            value: "arrayInitializer"
  - name: "dimExprs"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "dimExpr"
  - name: "dimExpr"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "["
      - type: ["reference"]
        value: "expression"
      - type: ["keyword"]
        value: "]"
  - name: "constantExpression"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "expression"
  - name: "expression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "lambdaExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "assignmentExpression"
  - name: "lambdaExpression"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "lambdaParameters"
      - type: ["keyword"]
        value: "->"
      - type: ["reference"]
        value: "lambdaBody"
  - name: "lambdaParameters"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "Identifier"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["keyword"]
            value: ")"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "inferredFormalParameterList"
          - type: ["keyword"]
            value: ")"
  - name: "inferredFormalParameterList"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "Identifier"
  - name: "lambdaBody"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "block"
  - name: "assignmentExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "assignment"
  - name: "assignment"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "leftHandSide"
      - type: ["reference"]
        value: "assignmentOperator"
      - type: ["reference"]
        value: "expression"
  - name: "leftHandSide"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "expressionName"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "fieldAccess"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "arrayAccess"
  - name: "assignmentOperator"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "*="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "/="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "%="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "+="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "-="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "<<="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ">>="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: ">>>="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "&="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "^="
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "|="
  - name: "conditionalExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalOrExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalOrExpression"
          - type: ["keyword"]
            value: "?"
          - type: ["reference"]
            value: "expression"
          - type: ["keyword"]
            value: ":"
          - type: ["reference"]
            value: "conditionalExpression"
  - name: "conditionalOrExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalAndExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalOrExpression"
          - type: ["keyword"]
            value: "||"
          - type: ["reference"]
            value: "conditionalAndExpression"
  - name: "conditionalAndExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "inclusiveOrExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "conditionalAndExpression"
          - type: ["keyword"]
            value: "&&"
          - type: ["reference"]
            value: "inclusiveOrExpression"
  - name: "inclusiveOrExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "exclusiveOrExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "inclusiveOrExpression"
          - type: ["keyword"]
            value: "|"
          - type: ["reference"]
            value: "exclusiveOrExpression"
  - name: "exclusiveOrExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "andExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "exclusiveOrExpression"
          - type: ["keyword"]
            value: "^"
          - type: ["reference"]
            value: "andExpression"
  - name: "andExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "equalityExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "andExpression"
          - type: ["keyword"]
            value: "&"
          - type: ["reference"]
            value: "equalityExpression"
  - name: "equalityExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "relationalExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "equalityExpression"
          - type: ["keyword"]
            value: "=="
          - type: ["reference"]
            value: "relationalExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "equalityExpression"
          - type: ["keyword"]
            value: "!="
          - type: ["reference"]
            value: "relationalExpression"
  - name: "relationalExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "shiftExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "relationalExpression"
          - type: ["keyword"]
            value: "<"
          - type: ["reference"]
            value: "shiftExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "relationalExpression"
          - type: ["keyword"]
            value: ">"
          - type: ["reference"]
            value: "shiftExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "relationalExpression"
          - type: ["keyword"]
            value: "<="
          - type: ["reference"]
            value: "shiftExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "relationalExpression"
          - type: ["keyword"]
            value: ">="
          - type: ["reference"]
            value: "shiftExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "relationalExpression"
          - type: ["keyword"]
            value: "instanceof"
          - type: ["reference"]
            value: "referenceType"
  - name: "shiftExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "additiveExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "shiftExpression"
          - type: ["keyword"]
            value: "<"
          - type: ["keyword"]
            value: "<"
          - type: ["reference"]
            value: "additiveExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "shiftExpression"
          - type: ["keyword"]
            value: ">"
          - type: ["keyword"]
            value: ">"
          - type: ["reference"]
            value: "additiveExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "shiftExpression"
          - type: ["keyword"]
            value: ">"
          - type: ["keyword"]
            value: ">"
          - type: ["keyword"]
            value: ">"
          - type: ["reference"]
            value: "additiveExpression"
  - name: "additiveExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "multiplicativeExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "additiveExpression"
          - type: ["keyword"]
            value: "+"
          - type: ["reference"]
            value: "multiplicativeExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "additiveExpression"
          - type: ["keyword"]
            value: "-"
          - type: ["reference"]
            value: "multiplicativeExpression"
  - name: "multiplicativeExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "multiplicativeExpression"
          - type: ["keyword"]
            value: "*"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "multiplicativeExpression"
          - type: ["keyword"]
            value: "/"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "multiplicativeExpression"
          - type: ["keyword"]
            value: "%"
          - type: ["reference"]
            value: "unaryExpression"
  - name: "unaryExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "preIncrementExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "preDecrementExpression"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "+"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "-"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "unaryExpressionNotPlusMinus"
  - name: "preIncrementExpression"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "++"
      - type: ["reference"]
        value: "unaryExpression"
  - name: "preDecrementExpression"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "--"
      - type: ["reference"]
        value: "unaryExpression"
  - name: "unaryExpressionNotPlusMinus"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "postfixExpression"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "~"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "!"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["reference"]
            value: "castExpression"
  - name: "postfixExpression"
    type: ["sequence"]
    elements:
  - name: "postIncrementExpression"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "postfixExpression"
      - type: ["keyword"]
        value: "++"
  - name: "postIncrementExpression_lf_postfixExpression"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "++"
  - name: "postDecrementExpression"
    type: ["sequence"]
    elements:
      - type: ["reference"]
        value: "postfixExpression"
      - type: ["keyword"]
        value: "--"
  - name: "postDecrementExpression_lf_postfixExpression"
    type: ["sequence"]
    elements:
      - type: ["keyword"]
        value: "--"
  - name: "castExpression"
    type: ["choice"]
    choices:
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "primitiveType"
          - type: ["keyword"]
            value: ")"
          - type: ["reference"]
            value: "unaryExpression"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "referenceType"
          - type: ["keyword"]
            value: ")"
          - type: ["reference"]
            value: "unaryExpressionNotPlusMinus"
      - type: ["sequence"]
        elements:
          - type: ["keyword"]
            value: "("
          - type: ["reference"]
            value: "referenceType"
          - type: ["keyword"]
            value: ")"
          - type: ["reference"]
            value: "lambdaExpression"
